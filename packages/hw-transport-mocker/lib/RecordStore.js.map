{"version":3,"sources":["../src/RecordStore.js"],"names":["RecordStore","cache","apdu","out","apduHex","toString","outHex","console","warn","Error","Buffer","from","obj","recordStore"],"mappings":";;;;;;;;;;IAEqBA,W;;;;SACnBC,K,GAAiC,E;;;;;mCAElBC,I,EAAcC,G,EAAa;AAAA,UAChCF,KADgC,GACtB,IADsB,CAChCA,KADgC;;AAExC,UAAMG,UAAUF,KAAKG,QAAL,CAAc,KAAd,CAAhB;AACA,UAAMC,SAASH,IAAIE,QAAJ,CAAa,KAAb,CAAf;AACA,UAAID,WAAWH,KAAX,IAAoBA,MAAMG,OAAN,MAAmBE,MAA3C,EAAmD;AACjDC,gBAAQC,IAAR,CACE,mFACEJ,OAFJ;AAID;AACDH,YAAMG,OAAN,IAAiBE,MAAjB;AACD;;;oCAEeJ,I,EAAsB;AAAA,UAC5BD,KAD4B,GAClB,IADkB,CAC5BA,KAD4B;;AAEpC,UAAMG,UAAUF,KAAKG,QAAL,CAAc,KAAd,CAAhB;AACA,UAAI,EAAED,WAAWH,KAAb,CAAJ,EAAyB;AACvB,cAAM,IAAIQ,KAAJ,CAAU,wCAAwCL,OAAlD,CAAN;AACD;AACD,aAAOM,OAAOC,IAAP,CAAYV,MAAMG,OAAN,CAAZ,EAA4B,KAA5B,CAAP;AACD;;;+BAEkB;AAAA,UACTH,KADS,GACC,IADD,CACTA,KADS;;AAEjB,aAAO,EAAEA,YAAF,EAAP;AACD;;;+BAEiBW,G,EAA0B;AAC1C,UAAMC,cAAc,IAAIb,WAAJ,EAApB;AACA,UAAI,CAACY,IAAIX,KAAT,EAAgB;AACd,cAAM,IAAIQ,KAAJ,CAAU,sCAAV,CAAN;AACD;AACDI,kBAAYZ,KAAZ,GAAoBW,IAAIX,KAAxB;AACA,aAAOY,WAAP;AACD;;;;;;kBArCkBb,W","file":"RecordStore.js","sourcesContent":["//@flow\n\nexport default class RecordStore {\n  cache: { [_: string]: string } = {};\n\n  recordExchange(apdu: Buffer, out: Buffer) {\n    const { cache } = this;\n    const apduHex = apdu.toString(\"hex\");\n    const outHex = out.toString(\"hex\");\n    if (apduHex in cache && cache[apduHex] !== outHex) {\n      console.warn(\n        \"Found 2 same APDUs with different result. this can lead to mock issues.\\nAPDU=\" +\n          apduHex\n      );\n    }\n    cache[apduHex] = outHex;\n  }\n\n  reverseExchange(apdu: Buffer): Buffer {\n    const { cache } = this;\n    const apduHex = apdu.toString(\"hex\");\n    if (!(apduHex in cache)) {\n      throw new Error(\"RecordStore missing cache for apdu=\" + apduHex);\n    }\n    return Buffer.from(cache[apduHex], \"hex\");\n  }\n\n  toObject(): Object {\n    const { cache } = this;\n    return { cache };\n  }\n\n  static fromObject(obj: Object): RecordStore {\n    const recordStore = new RecordStore();\n    if (!obj.cache) {\n      throw new Error(\"invalid json provided to RecordStore\");\n    }\n    recordStore.cache = obj.cache;\n    return recordStore;\n  }\n}\n"]}