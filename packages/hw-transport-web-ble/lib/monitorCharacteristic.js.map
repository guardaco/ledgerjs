{"version":3,"sources":["../src/monitorCharacteristic.js"],"names":["monitorCharacteristic","characteristic","Observable","create","logSubject","next","type","message","uuid","onCharacteristicValueChanged","event","target","value","o","Buffer","from","buffer","startNotifications","then","addEventListener","stopNotifications"],"mappings":";;;;;;;AACA;;AAEA;;AAEO,IAAMA,wDAAwB,SAAxBA,qBAAwB,CACnCC,cADmC;AAAA,SAGnCC,iBAAWC,MAAX,CAAkB,aAAK;AACrBC,sBAAWC,IAAX,CAAgB;AACdC,YAAM,SADQ;AAEdC,eAAS,mBAAmBN,eAAeO;AAF7B,KAAhB;;AAKA,aAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3C,UAAMT,iBAAiBS,MAAMC,MAA7B;AACA,UAAIV,eAAeW,KAAnB,EAA0B;AACxBC,UAAER,IAAF,CAAOS,OAAOC,IAAP,CAAYd,eAAeW,KAAf,CAAqBI,MAAjC,CAAP;AACD;AACF;;AAEDf,mBAAegB,kBAAf,GAAoCC,IAApC,CAAyC,YAAM;AAC7CjB,qBAAekB,gBAAf,CACE,4BADF,EAEEV,4BAFF;AAID,KALD;;AAOA,WAAO,YAAM;AACXL,wBAAWC,IAAX,CAAgB;AACdC,cAAM,SADQ;AAEdC,iBAAS,iBAAiBN,eAAeO;AAF3B,OAAhB;AAIAP,qBAAemB,iBAAf;AACD,KAND;AAOD,GA3BD,CAHmC;AAAA,CAA9B","file":"monitorCharacteristic.js","sourcesContent":["// @flow\nimport { Observable } from \"rxjs\";\nimport type { Characteristic } from \"./types\";\nimport { logSubject } from \"./debug\";\n\nexport const monitorCharacteristic = (\n  characteristic: Characteristic\n): Observable<Buffer> =>\n  Observable.create(o => {\n    logSubject.next({\n      type: \"verbose\",\n      message: \"start monitor \" + characteristic.uuid\n    });\n\n    function onCharacteristicValueChanged(event) {\n      const characteristic = event.target;\n      if (characteristic.value) {\n        o.next(Buffer.from(characteristic.value.buffer));\n      }\n    }\n\n    characteristic.startNotifications().then(() => {\n      characteristic.addEventListener(\n        \"characteristicvaluechanged\",\n        onCharacteristicValueChanged\n      );\n    });\n\n    return () => {\n      logSubject.next({\n        type: \"verbose\",\n        message: \"end monitor \" + characteristic.uuid\n      });\n      characteristic.stopNotifications();\n    };\n  });\n"]}