{"version":3,"sources":["../src/webusb.js"],"names":["navigator","usb","requestDevice","filters","ledgerDevices","device","requestLedgerDevice","getDevices","devices","filter","d","vendorId","ledgerUSBVendorId","getLedgerDevices","existingDevices","length","getFirstLedgerDevice","isSupported","resolve"],"mappings":";;;;;;;;;;;;;;;;;;;;sFAKO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgBA,UAAUC,GAAV,CAAcC,aAAd,CAA4B,EAAEC,SAASC,aAAX,EAA5B,CAFhB;;AAAA;AAECC,kBAFD;AAAA,6CAGEA,MAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,mB;;;;;;uFAMf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBN,UAAUC,GAAV,CAAcM,UAAd,EAFjB;;AAAA;AAECC,mBAFD;AAAA,8CAGEA,QAAQC,MAAR,CAAe;AAAA,qBAAKC,EAAEC,QAAF,KAAeC,sBAApB;AAAA,aAAf,CAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,gB;;;;;;uFAMf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBA,kBADzB;;AAAA;AACCC,2BADD;;AAAA,kBAEDA,gBAAgBC,MAAhB,GAAyB,CAFxB;AAAA;AAAA;AAAA;;AAAA,8CAEkCD,gBAAgB,CAAhB,CAFlC;;AAAA;AAAA,8CAGER,qBAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeU,oB;;;;;AAhBtB;;;;AAEA,IAAMZ,gBAAgB,CAAC,EAAEO,UAAUC,sBAAZ,EAAD,CAAtB;AAoBO,IAAMK,oCAAc,SAAdA,WAAc;AAAA,SACzB,kBAAQC,OAAR,CACE,CAAC,CAAClB,SAAF;AACE;AACA,GAAC,CAACA,UAAUC,GAFd,IAGE,OAAOD,UAAUC,GAAV,CAAcM,UAArB,KAAoC,UAJxC,CADyB;AAAA,CAApB","file":"webusb.js","sourcesContent":["// @flow\nimport { ledgerUSBVendorId } from \"../../devices/lib\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport async function requestLedgerDevice(): Promise<USBDevice> {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({ filters: ledgerDevices });\n  return device;\n}\n\nexport async function getLedgerDevices(): Promise<USBDevice[]> {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n}\n\nexport async function getFirstLedgerDevice(): Promise<USBDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    !!navigator &&\n      // $FlowFixMe\n      !!navigator.usb &&\n      typeof navigator.usb.getDevices === \"function\"\n  );\n"]}